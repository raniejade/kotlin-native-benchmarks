import kotlinx.benchmark.gradle.JvmBenchmarkTarget
import kotlinx.benchmark.gradle.NativeBenchmarkTarget

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
  kotlin("multiplatform") version "1.3.50"
  id("org.jetbrains.kotlin.plugin.allopen") version "1.3.50"
  id("kotlinx.benchmark") version "0.2.0-dev-7"
}

allOpen {
  annotation("org.openjdk.jmh.annotations.State")
}

repositories {
  maven("https://dl.bintray.com/kotlin/kotlinx")
  jcenter()
}

kotlin {
  jvm("jvm")
  linuxX64("linux")

  sourceSets {
    val commonMain by getting {
      dependencies {
        implementation(kotlin("stdlib-common"))
        implementation("org.jetbrains.kotlinx:kotlinx.benchmark.runtime-metadata:0.2.0-dev-7")
      }
    }

    val jvmMain by getting {
      dependencies {
        implementation(kotlin("stdlib"))
        implementation("org.jetbrains.kotlinx:kotlinx.benchmark.runtime-jvm:0.2.0-dev-7")
      }
    }

    val linuxMain by getting {
      dependencies {
        implementation("org.jetbrains.kotlinx:kotlinx.benchmark.runtime-linuxx64:0.2.0-dev-7")
      }
    }
  }
}

benchmark {
  configurations {
    val main by getting {
      warmups = 2
      iterations = 3
      include("benchmark.JNI")
    }
  }

  targets {
    // can't do register<JvmBenchmarkTarget> as targets is not a polymorphic container
    register("jvm") {
      (this as JvmBenchmarkTarget).jmhVersion = "1.21"
    }

    register("linux") {
      // nada
    }
  }
}

tasks.withType(JavaExec::class.java) {
  jvmArgs = mutableListOf("-Djava.library.path=/home/raniejade/Workspace/personal/kotlin-native-benchmarks/jni/build")
}